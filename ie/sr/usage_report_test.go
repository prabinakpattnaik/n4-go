package sr

import (
	"bytes"
	"fmt"
	"testing"
)

func TestUsageReport(t *testing.T) {
	b := []byte{0x00, 0x51, 0x00, 0x04, 0x00, 0x00, 0x00, 0x01, 0x00, 0x68, 0x00, 0x04,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x02, 0x04, 0x00, 0x00, 0x4b, 0x00, 0x04,
		0xe2, 0x30, 0x88, 0xce, 0x00, 0x4c, 0x00, 0x04, 0xe2, 0x30, 0x89, 0x46, 0x00, 0x42,
		0x00, 0x19, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x43, 0x00, 0x04, 0x00, 0x00, 0x00, 0x78, 0x00, 0x45, 0x00, 0x04, 0xe2, 0x30, 0x88,
		0xcf, 0x00, 0x46, 0x00, 0x04, 0xe2, 0x30, 0x88, 0xcf}

	var u UsageReport
	err := u.UsageReportFromByte(b)
	if err != nil {
		t.Fatalf("Usage report is not valid %+v\n", err)
	}

	if int(*u.URRID) != 1 {
		t.Fatalf("URRID is not valid %d\n", u.URRID)
	}
	if int(*u.URSEQN) != 0 {
		t.Fatalf("URSEQN is not valid %d\n", u.URSEQN)
	}
	/*
		if !u.UsageReportTrigger.TIMTH {
			t.Fatalf("Usage Report Trigger is not valid %+v\n", u.UsageReportTrigger)
		}
	*/
	fmt.Printf("start time %+v\n", u.StartTime)
	ba := []byte{0x04, 0x00}
	bc := []byte(*u.UsageReportTrigger)

	if !bytes.Equal(bc, ba) {
		t.Fatalf("u.UsageReport trigger is not valid")
	}

}
